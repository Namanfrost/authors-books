{"ast":null,"code":"import { gql } from '@apollo/client';\nconst getBooksQuery = gql`\n    {\n        books{\n            name\n            genre\n            id\n        }\n    }\n`;\nconst getAuthorsQuery = gql`\n    {\n        authors{\n            name\n            age\n            id\n        }\n    }\n`;\nconst addBookMutation = gql`\n\nmutation($name:String!,$genre: String! ,$authorID : ID! ){\n    addBook(name : $name , genre:$genre ,authorID:$authorID){\n        name\n        genre\n        id\n    }\n}\n`;\nconst getBookQuery = gql`\n    query($id: ID ){\n        book(id:$id){\n            name\n            genre\n            id\n            author{\n                name\n                age \n                id \n                books{\n                    name\n                    genre\n                    id\n                }\n            }\n        }\n    }\n`;\nexport { getAuthorsQuery, getBooksQuery, addBookMutation, getBookQuery };","map":{"version":3,"sources":["D:/graphql-playlist/client/src/queries/queries.js"],"names":["gql","getBooksQuery","getAuthorsQuery","addBookMutation","getBookQuery"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAME,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMG,eAAe,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAYA,MAAMI,YAAY,GAAGJ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA,SAASE,eAAT,EAA0BD,aAA1B,EAAyCE,eAAzC,EAA0DC,YAA1D","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nconst getBooksQuery = gql`\r\n    {\r\n        books{\r\n            name\r\n            genre\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst getAuthorsQuery = gql`\r\n    {\r\n        authors{\r\n            name\r\n            age\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst addBookMutation = gql`\r\n\r\nmutation($name:String!,$genre: String! ,$authorID : ID! ){\r\n    addBook(name : $name , genre:$genre ,authorID:$authorID){\r\n        name\r\n        genre\r\n        id\r\n    }\r\n}\r\n`\r\n\r\n\r\nconst getBookQuery = gql`\r\n    query($id: ID ){\r\n        book(id:$id){\r\n            name\r\n            genre\r\n            id\r\n            author{\r\n                name\r\n                age \r\n                id \r\n                books{\r\n                    name\r\n                    genre\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport { getAuthorsQuery, getBooksQuery, addBookMutation, getBookQuery};"]},"metadata":{},"sourceType":"module"}