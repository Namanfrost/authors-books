{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\AddBook.js\";\nimport React, { Component, useState } from \"react\";\nimport { compose } from '@apollo/client';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorID: ''\n    };\n  } //const { loading, error, data } = useQuery(getAuthorsQuery);\n\n\n  displayAuthors() {\n    var data = props.getAuthorsQuery;\n    console.log(data);\n    return data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: author.id,\n      children: [\" \", author.name]\n    }, author.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this));\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    setNewBook({\n      name: name,\n      genre: genre,\n      authorID: authorID\n    });\n    console.log(newBook);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Book Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Genre : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setgenre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Author: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setauthorID(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), displayAuthors()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/AddBook.js"],"names":["React","Component","useState","compose","getAuthorsQuery","addBookMutation","graphql","name","AddBook","constructor","props","state","genre","authorID","displayAuthors","data","console","log","authors","map","author","id","submitForm","e","preventDefault","setNewBook","newBook","render","bind","setgenre","target","value","setauthorID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,oBAAjD;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,eAAeH,OAAO,CAClBG,OAAO,CAACF,eAAD,EAAkB;AAAEG,EAAAA,IAAI,EAAE;AAAR,CAAlB,CADW,EAElBD,OAAO,CAACD,eAAD,EAAkB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAlB,CAFW,CAAP,CAGbC,OAHa,CAAf;;AAKA,MAAMA,OAAN,SAAsBP,SAAtB,CAA+B;AAC/BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRJ,MAAAA,IAAI,EAAC,EADG;AAERK,MAAAA,KAAK,EAAC,EAFE;AAGRC,MAAAA,QAAQ,EAAC;AAHD,KAAb;AAKH,GAT8B,CAU3B;;;AAECC,EAAAA,cAAc,GAAG;AACd,QAAIC,IAAI,GAAGL,KAAK,CAACN,eAAjB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WACIA,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,MAAD,iBACb;AAAwB,MAAA,KAAK,EAAEA,MAAM,CAACC,EAAtC;AAAA,sBAA4CD,MAAM,CAACb,IAAnD;AAAA,OAAaa,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH;;AAIAC,EAAAA,UAAU,CAACC,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,UAAU,CAAC;AAAElB,MAAAA,IAAI,EAAEA,IAAR;AAAcK,MAAAA,KAAK,EAAEA,KAArB;AAA4BC,MAAAA,QAAQ,EAAEA;AAAtC,KAAD,CAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACH;;AACJC,EAAAA,MAAM,GAAE;AACL,wBACI;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,QAAQ,EAAE,KAAKL,UAAL,CAAgBM,IAAhB,CAAqB,IAArB,CAA9B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGL,CAAD,IAAO;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAGA,CAAD,IAAOM,QAAQ,CAACN,CAAC,CAACO,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,QAAQ,EAAGR,CAAD,IAAOS,WAAW,CAACT,CAAC,CAACO,MAAF,CAASC,KAAV,CAApC;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKjB,cAAc,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AArD8B;;AAsD9B","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { compose } from '@apollo/client';\r\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\n\r\nexport default compose(\r\n    graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\r\n    graphql(addBookMutation, { name: \"addBookMutation\" }),\r\n)(AddBook);\r\n\r\nclass AddBook extends Component{\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n         name:'',\r\n         genre:'',\r\n         authorID:''\r\n    };\r\n}\r\n    //const { loading, error, data } = useQuery(getAuthorsQuery);\r\n\r\n     displayAuthors() {\r\n        var data = props.getAuthorsQuery;\r\n        console.log(data);\r\n        return (\r\n            data.authors.map((author) => (\r\n                <option key={author.id} value={author.id}> {author.name}</option>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n     submitForm(e) {\r\n        e.preventDefault();\r\n        setNewBook({ name: name, genre: genre, authorID: authorID });\r\n        console.log(newBook);\r\n    }\r\n render(){\r\n    return (\r\n        <form id=\"add-book\" onSubmit={this.submitForm.bind(this)} >\r\n            <div className=\"field\">\r\n                <label> Book Name : </label>\r\n                <input type=\"text\" onChange={(e) => this} />\r\n            </div>\r\n\r\n            <div className=\"fields\">\r\n                <label> Genre : </label>\r\n                <input type=\"text\" onChange={(e) => setgenre(e.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label> Author: </label>\r\n                <select onChange={(e) => setauthorID(e.target.value)} >\r\n                    <option>Select Author</option>\r\n                    {displayAuthors()}\r\n                </select>\r\n            </div>\r\n            <button>Add Book</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n};\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}