{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\BooksList1.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client'; //import { graphql } from '@apollo/client';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBooksQuery = gql`\n    {\n        books{\n            name\n            id\n        }\n    }\n`;\n\nfunction BooksList1() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  console.log(data);\n  return data.map(({\n    book\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" book.name \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this));\n}\n\n_s(BooksList1, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BooksList1;\nexport default BooksList1;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList1\");","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/BooksList1.js"],"names":["React","useQuery","gql","getBooksQuery","BooksList1","loading","error","data","console","log","map","book","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CACA;;;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AAUA,SAASE,UAAT,GAAsB;AAAA;;AAElB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SAAOA,IAAI,CAACG,GAAL,CAAS,CAAC;AAACC,IAAAA;AAAD,GAAD,kBACZ;AAAA,2BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,KAAUC,IAAV;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAKH;;GAbQR,U;UAE4BH,Q;;;KAF5BG,U;AAeT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\n//import { graphql } from '@apollo/client';\r\n\r\nconst getBooksQuery = gql`\r\n    {\r\n        books{\r\n            name\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nfunction BooksList1() {\r\n\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n    console.log(data);\r\n   \r\n    return data.map(({book}) => (\r\n        <div key={name}>\r\n    <h1> book.name </h1>\r\n    </div>\r\n    ));\r\n}\r\n\r\nexport default BooksList1;\r\n"]},"metadata":{},"sourceType":"module"}