{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\AddBook.js\";\nimport React, { Component, useState } from \"react\";\nimport { compose } from '@apollo/client';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorID: ''\n    };\n  } //const { loading, error, data } = useQuery(getAuthorsQuery);\n\n\n  displayAuthors() {\n    var data = this.props.getAuthorsQuery;\n    console.log(data);\n    return data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: author.id,\n      children: [\" \", author.name]\n    }, author.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this));\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Book Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => this.setState({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Genre : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => this.setState({\n            genre: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Author: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => this.setState({\n            authorID: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), this.displayAuthors()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/AddBook.js"],"names":["React","Component","useState","compose","getAuthorsQuery","addBookMutation","graphql","AddBook","constructor","props","state","name","genre","authorID","displayAuthors","data","console","log","authors","map","author","id","submitForm","e","preventDefault","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { compose } from '@apollo/client';\r\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\n\r\n\r\n\r\nclass AddBook extends Component{\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n         name:'',\r\n         genre:'',\r\n         authorID:''\r\n    };\r\n}\r\n    //const { loading, error, data } = useQuery(getAuthorsQuery);\r\n\r\n     displayAuthors() {\r\n        var data = this.props.getAuthorsQuery;\r\n        console.log(data);\r\n        return (\r\n            data.authors.map((author) => (\r\n                <option key={author.id} value={author.id}> {author.name}</option>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n     submitForm(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(this.state);\r\n    }\r\n render(){\r\n    return (\r\n        <form id=\"add-book\" onSubmit={this.submitForm.bind(this)} >\r\n            <div className=\"field\">\r\n                <label> Book Name : </label>\r\n                <input type=\"text\" onChange={(e) => this.setState({name: e.target.value})} />\r\n            </div>\r\n\r\n            <div className=\"fields\">\r\n                <label> Genre : </label>\r\n                <input type=\"text\" onChange={(e) => this.setState({ genre: e.target.value })} />\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label> Author: </label>\r\n                <select onChange={(e) => this.setState({ authorID: e.target.value })} >\r\n                    <option>Select Author</option>\r\n                    {this.displayAuthors()}\r\n                </select>\r\n            </div>\r\n            <button>Add Book</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default compose(\r\n    graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\r\n    graphql(addBookMutation, { name: \"addBookMutation\" }),\r\n)(AddBook);\r\n\r\n"]},"metadata":{},"sourceType":"module"}