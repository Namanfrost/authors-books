{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { getAuthorsQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [name, setname] = useState(\"\");\n\nconst AddBook = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthorsQuery);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 26\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this);\n  }\n\n  console.log(data.authors);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Book Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Genre : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Author: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: author.id,\n          children: [\" \", author.name]\n        }, author.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBook, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/AddBook.js"],"names":["React","useEffect","useState","useQuery","getAuthorsQuery","name","setname","AddBook","loading","error","data","console","log","authors","map","author","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAIA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;;AAGA,MAAMK,OAAO,GAAG,MAAK;AAAA;;AAEjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACC,eAAD,CAAzC;;AAEA,MAAII,OAAJ,EAAa;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA0B,GAAxC,MACK,IAAIC,KAAJ,EAAW;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAAwB;;AAEzCE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AAEA,sBACI;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKH,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,MAAD,iBACd;AAAwB,UAAA,KAAK,EAAEA,MAAM,CAACC,EAAtC;AAAA,0BAA4CD,MAAM,CAACV,IAAnD;AAAA,WAAaU,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAlCD;;GAAMT,O;UAE+BJ,Q;;;KAF/BI,O;AAoCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\nimport { getAuthorsQuery } from '../queries/queries'\r\n\r\n \r\n\r\nconst [name, setname] = useState(\"\");\r\n\r\n\r\nconst AddBook = () =>{\r\n \r\n    const { loading, error, data } = useQuery(getAuthorsQuery);\r\n\r\n    if (loading) {return <p>Loading...</p>;}\r\n    else if (error) {return <p>Error :(</p>;}\r\n\r\n    console.log(data.authors);\r\n \r\n    return (\r\n        <form id=\"add-book\">\r\n            <div className=\"field\">\r\n                <label> Book Name : </label>\r\n                <input type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"fields\">\r\n                <label> Genre : </label>\r\n                <input type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label> Author: </label>\r\n                <select>\r\n                    <option>Select Author</option>\r\n                    {data.authors.map((author) => (\r\n                        <option key={author.id} value={author.id}> {author.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <button>Add Book</button>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nexport default AddBook;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}