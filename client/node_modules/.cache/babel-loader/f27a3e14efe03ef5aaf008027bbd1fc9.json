{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport DisplayBooks from './DisplayBooks';\nimport { getBooksQuery } from '../queries/queries';\nimport { BookDetails } from './BookDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  const [selected, setSelected] = useState(null);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }, this);else if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 28\n  }, this);\n  console.log(data.books);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"books\",\n    children: [data.books.map(book =>\n    /*#__PURE__*/\n    //<DisplayBooks key={book.id} book={book} />\n    _jsxDEV(\"li\", {\n      onClick: e => {\n        setSelected(e.target.value);\n      },\n      children: [\" \", book.name, \" \"]\n    }, book.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(BookDetails, {\n      book: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"CXulbOR0IychMGI9MbLL13QpUbc=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/BookList.js"],"names":["React","useState","useQuery","DisplayBooks","getBooksQuery","BookDetails","BookList","loading","error","data","selected","setSelected","console","log","books","map","book","e","target","value","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAAQC,WAAR,QAA0B,eAA1B;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,aAAD,CAAzC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAIM,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAb,KACK,IAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhBI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,KAAjB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACKL,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAgBC,IAAD;AAAA;AACZ;AACA;AAAmB,MAAA,OAAO,EAAGC,CAAD,IAAO;AAAEN,QAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA4B,OAAjE;AAAA,sBAAqEH,IAAI,CAACI,IAA1E;AAAA,OAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,YAFH,CADL,eAMI,QAAC,WAAD;AAAa,MAAA,IAAI;AAAjB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjBQf,Q;UAC4BJ,Q;;;KAD5BI,Q;AAmBT,eAAeA,QAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport DisplayBooks from './DisplayBooks'\r\nimport { getBooksQuery } from '../queries/queries'\r\nimport {BookDetails} from './BookDetails' \r\nfunction BookList() {\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n    const [selected, setSelected] = useState(null);\r\n    if (loading) return <p>Loading...</p>;\r\n    else if (error) return <p>Error :(</p>;\r\n\r\n    console.log(data.books);\r\n    return (\r\n        <div className=\"books\">\r\n            {data.books.map((book) => (\r\n                //<DisplayBooks key={book.id} book={book} />\r\n                <li key={book.id}  onClick={(e) => { setSelected(e.target.value)}}> {book.name} </li>\r\n            ))}\r\n\r\n            <BookDetails book ></BookDetails>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}