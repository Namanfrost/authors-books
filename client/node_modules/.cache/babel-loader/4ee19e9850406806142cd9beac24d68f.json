{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\BookDetails.js\";\n//import { useQuery } from '@apollo/client';\nimport React, { Component } from 'react';\nimport { getBookQuery } from '../queries/queries';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class BookDetails extends Component {\n  //   const [addBookMut, { dataMutation }] = useQuery(addBookMutation);\n  displayBookDetails() {\n    const {\n      book\n    } = this.props.data;\n\n    if (book) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"book-details\",\n      children: this.displayBookDetails()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nBookDetails.propTypes = {};\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/BookDetails.js"],"names":["React","Component","getBookQuery","graphql","BookDetails","displayBookDetails","book","props","data","name","genre","render","propTypes","options","variables","id","bookId"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AACA,OAAO,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAIvC;AACJI,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAL,CAAWC,IAA5B;;AACA,QAAIF,IAAJ,EAAU;AACN,0BACI;AAAA,gCACI;AAAA,oBAAKA,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AACGC,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,gBACK,KAAKN,kBAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxBsC;AAA9BD,W,CACFQ,S,GAAY,E;AA2BvB,eAAeT,OAAO,CAACD,YAAD,EAAe;AACjCW,EAAAA,OAAO,EAAGN,KAAD,IAAW;AAChB,WAAO;AACHO,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAER,KAAK,CAACS;AADH;AADR,KAAP;AAKH;AAPgC,CAAf,CAAP,CAQZZ,WARY,CAAf","sourcesContent":["//import { useQuery } from '@apollo/client';\r\nimport React, { Component } from 'react'\r\nimport { getBookQuery } from '../queries/queries';\r\nimport { graphql } from '@apollo/client/react/hoc';\r\nexport class BookDetails extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n    //   const [addBookMut, { dataMutation }] = useQuery(addBookMutation);\r\ndisplayBookDetails() {\r\n    const { book } = this.props.data;\r\n    if (book) {\r\n        return (\r\n            <div>\r\n                <h2>{book.name}</h2>\r\n                <p>{book.genre}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div id=\"book-details\">\r\n               { this.displayBookDetails()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default graphql(getBookQuery, {\r\n    options: (props) => {\r\n        return {\r\n            variables: {\r\n                id: props.bookId\r\n            }\r\n        }\r\n    }\r\n})(BookDetails);\r\n"]},"metadata":{},"sourceType":"module"}