{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client'; //import { graphql } from '@apollo/client';\n\nimport DisplayBooks from './DisplayBooks';\nimport { getBooksQuery } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 25\n  }, this);else if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 28\n  }, this);\n  console.log(data.books);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"books\",\n    children: data.books.map(book => /*#__PURE__*/_jsxDEV(DisplayBooks, {\n      book: book\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/BookList.js"],"names":["React","useQuery","gql","DisplayBooks","getBooksQuery","BookList","loading","error","data","console","log","books","map","book","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,aAAR,QAA4B,IAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAb,KACK,IAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhBE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKH,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBACZ,QAAC,YAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAdQT,Q;UAC4BJ,Q;;;KAD5BI,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\n//import { graphql } from '@apollo/client';\r\nimport DisplayBooks from './DisplayBooks'\r\nimport {getBooksQuery} from './'\r\n\r\nfunction BookList() {\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    else if (error) return <p>Error :(</p>;\r\n\r\n    console.log(data.books);\r\n    return (\r\n        <div className=\"books\">\r\n            {data.books.map((book) => (\r\n                <DisplayBooks key={book.id} book={book} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}