{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\BooksList1.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client'; //import { graphql } from '@apollo/client';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBooksQuery = gql`\n    {\n        books{\n            name\n            id\n        }\n    }\n`;\n\nconst displayBooks = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);else if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 28\n  }, this);else {\n    return data.books.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: book.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }, this);\n    });\n  }\n};\n\n_s(displayBooks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\nfunction BooksList1() {\n  _s2();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  console.log(data);\n  return data.books.map(({\n    book\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" book.name \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, book.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this));\n}\n\n_s2(BooksList1, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BooksList1;\nexport default BooksList1;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksList1\");","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/BooksList1.js"],"names":["React","useQuery","gql","getBooksQuery","displayBooks","loading","error","data","books","map","book","name","BooksList1","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CACA;;;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAME,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAb,KACK,IAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAX,KACA;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,IAAI,IAAI;AACnC,0BAAO;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFc,CAAP;AAIH;AACJ,CAZD;;GAAMP,Y;UAE+BH,Q;;;AAarC,SAASW,UAAT,GAAsB;AAAA;;AAElB,QAAM;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXO,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,SAAOA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBAClB;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUA,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAKH;;IAbQC,U;UAE4BX,Q;;;KAF5BW,U;AAeT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\n//import { graphql } from '@apollo/client';\r\n\r\nconst getBooksQuery = gql`\r\n    {\r\n        books{\r\n            name\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst displayBooks = () => {\r\n\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    else if (error) return <p>Error :(</p>;\r\n    else {\r\n        return data.books.map( book => {\r\n    return <li>{book.name}</li>\r\n}\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction BooksList1() {\r\n\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n    console.log(data);\r\n\r\n    return data.books.map(({ book }) => (\r\n        <div key={book.name}>\r\n            <h1> book.name </h1>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default BooksList1;\r\n"]},"metadata":{},"sourceType":"module"}