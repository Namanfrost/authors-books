{"ast":null,"code":"var _jsxFileName = \"D:\\\\graphql-playlist\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { getAuthorsQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBook() {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [genre, setgenre] = useState(\"\");\n  const [authorID, setauthorID] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthorsQuery);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }, this);\n  }\n\n  const submitForm = e => {\n    e.preventDefault();\n    const state = {\n      name: name,\n      ge\n    };\n    console.log(name, genre, authorID);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Book Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Genre : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setgenre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Author: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setauthorID(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: author.id,\n          children: [\" \", author.name]\n        }, author.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBook, \"dp4QlYNfskchyz0n9z6NkvyMBvA=\", false, function () {\n  return [useQuery];\n});\n\n_c = AddBook;\n;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["D:/graphql-playlist/client/src/components/AddBook.js"],"names":["React","useState","useQuery","getAuthorsQuery","AddBook","name","setname","genre","setgenre","authorID","setauthorID","loading","error","data","submitForm","e","preventDefault","state","ge","console","log","target","value","authors","map","author","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,QAAV,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAKA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACC,eAAD,CAAzC;;AAEA,MAAIQ,OAAJ,EAAa;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA0B,GAAxC,MACK,IAAIC,KAAJ,EAAW;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAAwB;;AAEzC,QAAME,UAAU,GAAIC,CAAD,IAAM;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG;AAACZ,MAAAA,IAAI,EAAEA,IAAP;AAAYa,MAAAA;AAAZ,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ,EAAiBE,KAAjB,EAAuBE,QAAvB;AACH,GAJD;;AAMA,sBACI;AAAM,IAAA,EAAE,EAAC,UAAT;AAAoB,IAAA,QAAQ,EAAEK,UAA9B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,QAAQ,EAAGC,CAAD,IAAKT,OAAO,CAACS,CAAC,CAACM,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGP,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACM,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,QAAQ,EAAGP,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CAApC;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKT,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAkBC,MAAD,iBACd;AAAwB,UAAA,KAAK,EAAEA,MAAM,CAACC,EAAtC;AAAA,0BAA4CD,MAAM,CAACpB,IAAnD;AAAA,WAAaoB,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA1CQtB,O;UAM4BF,Q;;;KAN5BE,O;AA0CR;AAED,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport {  useState } from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\nimport { getAuthorsQuery } from '../queries/queries'\r\n\r\n \r\n\r\n\r\nfunction AddBook (){\r\n\r\n    const [name, setname] = useState(\"\");\r\n    const [genre, setgenre] = useState(\"\");\r\n    const [authorID, setauthorID] = useState(\"\");\r\n\r\n    const { loading, error, data } = useQuery(getAuthorsQuery);\r\n\r\n    if (loading) {return <p>Loading...</p>;}\r\n    else if (error) {return <p>Error :(</p>;}\r\n\r\n    const submitForm = (e) =>{\r\n        e.preventDefault();\r\n        const state = {name :name,ge}\r\n        console.log(name,genre,authorID);\r\n    }\r\n \r\n    return (\r\n        <form id=\"add-book\" onSubmit={submitForm} >\r\n            <div className=\"field\">\r\n                <label> Book Name : </label>\r\n                <input type=\"text\"  onChange={(e)=>setname(e.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"fields\">\r\n                <label> Genre : </label>\r\n                <input type=\"text\" onChange={(e) => setgenre(e.target.value)}  />\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label> Author: </label>\r\n                <select onChange={(e) => setauthorID(e.target.value)} >\r\n                    <option>Select Author</option>\r\n                    {data.authors.map((author) => (\r\n                        <option key={author.id} value={author.id}> {author.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <button>Add Book</button>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nexport default AddBook;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}